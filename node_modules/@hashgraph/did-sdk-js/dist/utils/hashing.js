"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hashing = void 0;
const crypto = __importStar(require("crypto"));
const bs58_1 = __importDefault(require("bs58"));
const js_base64_1 = require("js-base64");
class Hashing {
}
exports.Hashing = Hashing;
Hashing.base58 = {
    encode: function (data) {
        return bs58_1.default.encode(data);
    },
    decode: function (data) {
        return bs58_1.default.decode(data);
    }
};
Hashing.sha256 = {
    digest: function (data) {
        const sha256 = crypto
            .createHash('sha256') // may need to change in the future.
            .update(data)
            .digest();
        return sha256;
    }
};
Hashing.base64 = {
    decode: function (encodedString) {
        return js_base64_1.Base64.fromBase64(encodedString);
        ;
    },
    encode: function (decodedBytes) {
        return js_base64_1.Base64.toBase64(decodedBytes);
    }
};
