import { TopicId, TopicMessage } from "@hashgraph/sdk";
import { MessageEnvelope } from "../message-envelope";
import { MessageListener } from "../message-listener";
import { HcsDidMessage } from "./hcs-did-message";
/**
 * A listener of confirmed {@link HcsDidMessage} messages from a DID topic.
 * Messages are received from a given mirror node, parsed and validated.
 */
export declare class HcsDidTopicListener extends MessageListener<HcsDidMessage> {
    /**
     * Creates a new instance of a DID topic listener for the given consensus topic.
     * By default, invalid messages are ignored and errors are not.
     *
     * @param didTopicId The DID consensus topic ID.
     */
    constructor(didTopicId: TopicId);
    protected extractMessage(response: TopicMessage): MessageEnvelope<HcsDidMessage>;
    protected isMessageValid(envelope: MessageEnvelope<HcsDidMessage>, response: TopicMessage): boolean;
}
