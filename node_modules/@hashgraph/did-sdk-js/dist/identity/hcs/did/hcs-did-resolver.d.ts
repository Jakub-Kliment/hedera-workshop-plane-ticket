import { TopicId } from "@hashgraph/sdk";
import { MessageEnvelope } from "../message-envelope";
import { MessageListener } from "../message-listener";
import { MessageResolver } from "../message-resolver";
import { HcsDidMessage } from "./hcs-did-message";
/**
 * Resolves the DID from Hedera network.
 */
export declare class HcsDidResolver extends MessageResolver<HcsDidMessage> {
    /**
     * Instantiates a new DID resolver for the given DID topic.
     *
     * @param topicId The HCS DID topic ID.
     */
    constructor(topicId: TopicId);
    /**
    * Adds a DID to resolve.
    *
    * @param did The DID string.
    * @return This resolver instance.
    */
    addDid(did: string): HcsDidResolver;
    /**
     * Adds multiple DIDs to resolve.
     *
     * @param dids The set of DID strings.
     * @return This resolver instance.
     */
    addDids(dids: string[]): HcsDidResolver;
    protected matchesSearchCriteria(message: HcsDidMessage): boolean;
    protected processMessage(envelope: MessageEnvelope<HcsDidMessage>): void;
    protected supplyMessageListener(): MessageListener<HcsDidMessage>;
}
