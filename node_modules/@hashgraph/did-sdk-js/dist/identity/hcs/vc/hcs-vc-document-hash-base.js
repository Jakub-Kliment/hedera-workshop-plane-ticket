"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HcsVcDocumentHashBase = void 0;
const timestamp_utils_1 = require("../../../utils/timestamp-utils");
const hcs_vc_document_json_properties_1 = require("./hcs-vc-document-json-properties");
const issuer_1 = require("./issuer");
/**
 * The part of the VC document that is used for hash calculation.
 */
class HcsVcDocumentHashBase {
    /**
     * Creates a new VC document instance.
     */
    constructor() {
        this.type = [hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.VERIFIABLE_CREDENTIAL_TYPE];
    }
    // JsonClass
    toJsonTree() {
        const rootObject = {};
        if (this.id)
            rootObject[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.ID] = this.id;
        if (this.type)
            rootObject[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.TYPE] = this.type;
        if (this.issuer)
            rootObject[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.ISSUER] = this.issuer.toJsonTree();
        if (this.issuanceDate)
            rootObject[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.ISSUANCE_DATE] = timestamp_utils_1.TimestampUtils.toJSON(this.issuanceDate);
        return rootObject;
    }
    static fromJsonTree(root, result) {
        if (!result)
            result = new HcsVcDocumentHashBase();
        if (root[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.ID])
            result.id = root[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.ID];
        if (root[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.TYPE])
            result.type = root[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.TYPE];
        if (root[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.ISSUER])
            result.issuer = issuer_1.Issuer.fromJsonTree(root[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.ISSUER]);
        if (root[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.ISSUANCE_DATE])
            result.issuanceDate = timestamp_utils_1.TimestampUtils.fromJson(root[hcs_vc_document_json_properties_1.HcsVcDocumentJsonProperties.ISSUANCE_DATE]);
        return result;
    }
    toJSON() {
        return JSON.stringify(this.toJsonTree());
    }
    static fromJson(json) {
        let result;
        try {
            const root = JSON.parse(json);
            result = this.fromJsonTree(root);
        }
        catch (e) {
            throw new Error('Given JSON string is not a valid HcsVcDocumentHashBase ' + e.message);
        }
        return result;
    }
}
exports.HcsVcDocumentHashBase = HcsVcDocumentHashBase;
